{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","scripts/main.js"],"names":[],"mappings":"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","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nfunction doMain() {\n  window.open(\"index.html\", \"_self\");\n}\n\nfunction doAbout() {\n  window.open(\"about.html\", \"_self\");\n}\n\nfunction setUI() {\n  document.getElementById(\"myMinWeight\").defaultValue = \"0 lbs \";\n  document.getElementById(\"myMinWeight\").readOnly = true;\n  document.getElementById(\"myMinWeight\").style.width = \"230px\";\n  document.getElementById(\"myRuleset\").style.width = \"230px\";\n  document.getElementById(\"myDisplacement\").style.width = \"170px\";\n  document.getElementById(\"myCalculate\").style.width = \"230px\";\n  setDefaults();\n}\n\nfunction setDefaults() {\n  document.getElementById(\"myRuleset\").value = \"2013 SCCA Solo Rules\";\n  document.getElementById(\"myMinWeight\").value = \"0 lbs \";\n  document.getElementById(\"myWheelDiameter\").value = \"16\\\"\";\n  document.getElementById(\"myWheelWidth\").value = \"10\\\"\";\n  document.getElementById(\"myDisplacement\").value = \"\"\n  document.getElementById(\"myCylinders\").value = \"8-cyl\";\n  document.getElementById(\"myUnits\").value = \"cc\";\n  document.getElementById(\"myClass\").value = \"XP\";\n  document.getElementById(\"myDrive\").value = \"RWD\";\n  document.getElementById(\"forcedInduction\").checked = false;\n  document.getElementById(\"abs\").checked = false;\n  document.getElementById(\"tractionControl\").checked = false;\n  document.getElementById(\"suspension\").checked = false;\n  document.getElementById(\"engine\").checked = false;\n  document.getElementById(\"valves\").checked = false;\n  document.getElementById(\"solidaxle\").checked = false;\n  document.getElementById(\"twoseater\").checked = false;\n  document.getElementById(\"skinnytire\").checked = false;\n  document.getElementById(\"pushrod\").checked = false;\n  document.getElementById(\"bias\").checked = false;\n  document.getElementById(\"tubbed\").checked = false;\n  window.scrollTo(0, 0);\n}\n\nfunction calculateWeight() {\n  var fi = document.getElementById(\"forcedInduction\").checked;\n  var abs = document.getElementById(\"abs\").checked;\n  var traction = document.getElementById(\"tractionControl\").checked;\n  var suspension = document.getElementById(\"suspension\").checked;\n  var engine = document.getElementById(\"engine\").checked;\n  var twovalve = document.getElementById(\"valves\").checked;\n  var solidaxle = document.getElementById(\"solidaxle\").checked;\n  var twoseater = document.getElementById(\"twoseater\").checked;\n  var skinnytire = document.getElementById(\"skinnytire\").checked;\n  var pushrod = document.getElementById(\"pushrod\").checked;\n  var bias = document.getElementById(\"bias\").checked;\n  var tubbed = document.getElementById(\"tubbed\").checked;\n\n  var cylinders = document.getElementById(\"myCylinders\").value;\n  var units = document.getElementById(\"myUnits\").value;\n  var myclass = document.getElementById(\"myClass\").value;\n  var mydrive = document.getElementById(\"myDrive\").value;\n\n  var rotary = false;\n  var min_weight, weight_multiplier, displacement_raw, displacement_in_cc, displacement_in_liters, per_liter_adder;\n\n  var rs = document.getElementById(\"myRuleset\").value.split(\" \");\n  var rule_year = Number(rs[0]);\n\n  if (cylinders == \"2-rtr\" || cylinders == \"3-rtr\") {\n    rotary = true;\n  }\n\n  var ww = document.getElementById(\"myWheelWidth\").value.split(\"\\\"\");\n  var wheel_width = Number(ww[0]);\n\n  var wd = document.getElementById(\"myWheelDiameter\").value.split(\"\\\"\");\n  var wheel_diameter = Number(wd[0]);\n\n  displacement_raw = Number(document.getElementById(\"myDisplacement\").value);\n\n  // Convert displacement to cubic centimeters if needed\n  if (units == \"cc\") {\n    displacement_in_cc = displacement_raw;\n    displacement_in_liters = displacement_raw / 1000;\n  } else if (units == \"l\") {\n    displacement_in_cc = displacement_raw * 1000;\n    displacement_in_liters = displacement_raw;\n  } else if (units == \"ci\") {\n    displacement_in_cc = displacement_raw * 16.387064;\n    displacement_in_liters = displacement_in_cc / 1000;\n  }\n\n  // Class specific conversions  \n  switch (myclass) {\n\n    // XP\n    case \"XP\":\n      per_liter_adder = 0;\n      if (engine) {\n        per_liter_adder = 20;\n      }\n      if (rotary) {\n        displacement_in_liters *= 2;\n      }\n      if (fi) {\n        displacement_in_liters *= 1.4;\n      }\n      if (displacement_in_liters < 4.0) {\n        if (mydrive == \"FWD\")\n          min_weight = 1200 + ((150 + per_liter_adder) * displacement_in_liters);\n        else if (mydrive == \"RWD\")\n          min_weight = 1200 + ((200 + per_liter_adder) * displacement_in_liters);\n        else if (mydrive == \"AWD\")\n          min_weight = 1200 + ((250 + per_liter_adder) * displacement_in_liters);\n      } else {\n        if (mydrive == \"FWD\")\n          min_weight = 1200 + ((130 + per_liter_adder) * displacement_in_liters);\n        else if (mydrive == \"RWD\")\n          min_weight = 1200 + ((180 + per_liter_adder) * displacement_in_liters);\n        else if (mydrive == \"AWD\")\n          min_weight = 1200 + ((250 + per_liter_adder) * displacement_in_liters);\n      }\n      if (min_weight > 2300) {\n        min_weight = 2300;\n      }\n      if (abs) {\n        min_weight += 50;\n      }\n      if (traction) {\n        min_weight += 50;\n      }\n      if (suspension) {\n        min_weight += 100;\n      }\n      if ((rule_year > 2012) && fi) {\n        if (mydrive == \"FWD\")\n          if (min_weight < 1575) min_weight = 1575;\n          else if (mydrive == \"RWD\")\n          if (min_weight < 1700) min_weight = 1700;\n          else if (mydrive == \"AWD\")\n          if (min_weight < 1825) min_weight = 1825;\n      }\n      break;\n\n      // BP\n    case \"BP\":\n      if (rotary && fi) {\n        min_weight = 2300;\n      } else if (fi) {\n        if (displacement_in_cc > 3200)\n          min_weight = 2600;\n        else if (displacement_in_cc > 2700)\n          min_weight = 2300;\n        else\n          min_weight = 2200;\n      } else {\n        if (displacement_in_cc > 6500)\n          min_weight = 2800;\n        else if (displacement_in_cc > 6000)\n          min_weight = 2700;\n        else if (displacement_in_cc > 5100)\n          min_weight = 2600;\n        else\n          min_weight = 2450;\n      }\n      if (wheel_width > 10) {\n        min_weight += 50;\n      }\n      if (wheel_diameter > 16) {\n        min_weight += 100;\n      }\n      break;\n      // CP\n    case \"CP\":\n      if (cylinders == \"8-cyl\") {\n        if (displacement_in_cc > 5100)\n          min_weight = 3000;\n        else\n          min_weight = 2700;\n      } else if (cylinders == \"6-cyl\") {\n        if (displacement_in_cc > 4500) {\n          min_weight = 0;\n          break;\n        }\n        if (fi)\n          min_weight = 2550;\n        else\n          min_weight = 2450;\n      } else if (cylinders == \"4-cyl\") {\n        if (fi)\n          min_weight = 2450;\n        else {\n          min_weight = 0;\n          break;\n        }\n      } else {\n        min_weight = 0;\n        break;\n      }\n      if (wheel_width > 10) {\n        min_weight += 50;\n      }\n      if (wheel_diameter > 16) {\n        min_weight += 50;\n      }\n      break;\n      // DP\n    case \"DP\":\n      if (displacement_in_cc <= 1667) {\n        min_weight = displacement_in_cc * 1.06;\n      } else {\n        min_weight = (displacement_in_cc * 0.91) + 250;\n      }\n      if (wheel_width > 10) {\n        min_weight += 100;\n      }\n      break;\n      // EP\n    case \"EP\":\n      if (rotary)\n        min_weight = displacement_in_cc * 0.85;\n      else\n        min_weight = displacement_in_cc * 1.00;\n      if (min_weight < 1350) {\n        min_weight = 1350;\n      }\n      if (min_weight > 2200) {\n        min_weight = 2200;\n      }\n      if (twovalve) {\n        if (wheel_width > 10) min_weight += 100;\n      } else {\n        if (wheel_width > 7) min_weight += 75;\n        if (wheel_width > 10) min_weight += 75;\n      }\n      break;\n      // FP\n    case \"FP\":\n      if (rotary)\n        weight_multiplier = 0.70;\n      else\n        weight_multiplier = 0.75;\n      if (fi) {\n        weight_multiplier += 0.450;\n      }\n      if (mydrive == \"AWD\") {\n        weight_multiplier += 0.100;\n      }\n      if (mydrive == \"FWD\") {\n        weight_multiplier -= 0.100;\n      }\n      min_weight = weight_multiplier * displacement_in_cc;\n      if (min_weight < 1900) {\n        min_weight = 1900;\n      }\n      if (min_weight > 2700) {\n        min_weight = 2700;\n      }\n      if (wheel_width > 10) {\n        min_weight += 100;\n      }\n      break;\n      // DM\n    case \"DM\":\n      if (displacement_in_cc > 2000) {\n        min_weight = 0;\n        break;\n      }\n      if (rotary) {\n        if (displacement_in_cc < 1200)\n          min_weight = 1280;\n        else\n          min_weight = 1380;\n      } else if (displacement_in_cc > 1800) {\n        min_weight = 1380;\n      } else {\n        min_weight = 1280;\n      }\n      if (mydrive == \"RWD\") {\n        if (bias)\n          min_weight -= 35;\n      } else if (mydrive == \"FWD\") {\n        if (bias)\n          min_weight -= 35;\n      } else if (mydrive == \"AWD\") {\n        min_weight += 200;\n      }\n      if (tubbed)\n        min_weight += 40;\n      break;\n      // EM\n    case \"EM\":\n      if (rotary) {\n        if (cylinders == \"3-rtr\")\n          min_weight = 1800;\n        else\n          min_weight = 1700;\n      } else if (pushrod) {\n        if (displacement_in_cc > 4500)\n          min_weight = 1800;\n        else\n          min_weight = 1700;\n      } else {\n        if (displacement_in_cc > 3200)\n          min_weight = 1800;\n        else\n          min_weight = 1700;\n      }\n      if (mydrive == \"RWD\") {\n        if (bias)\n          min_weight -= 50;\n      } else if (mydrive == \"FWD\") {\n        if (bias)\n          min_weight -= 50;\n      } else if (mydrive == \"AWD\") {\n        min_weight += 300;\n      }\n      if (tubbed)\n        min_weight += 50;\n      break;\n      // SM\n    case \"SM\":\n      per_liter_adder = 0;\n      if (rotary) {\n        if (cylinders == \"3-rtr\")\n          displacement_in_liters += (0.9 * 3);\n        else\n          displacement_in_liters += (0.9 * 2);\n      }\n      if (engine) {\n        per_liter_adder += 25;\n      }\n      if (solidaxle) {\n        per_liter_adder -= 25;\n      }\n      if (fi) {\n        displacement_in_liters += 1.4;\n      }\n      if (mydrive == \"RWD\")\n        min_weight = 1800 + ((200 + per_liter_adder) * displacement_in_liters);\n      else if (mydrive == \"FWD\")\n        min_weight = 1550 + ((125 + per_liter_adder) * displacement_in_liters);\n      else if (mydrive == \"AWD\")\n        min_weight = 1800 + ((300 + per_liter_adder) * displacement_in_liters);\n      if (skinnytire) {\n        min_weight -= 200;\n      }\n      if (min_weight > 3100) {\n        min_weight = 3100;\n      }\n      break;\n      // SSM\n    case \"SSM\":\n      if (!twoseater) {\n        min_weight = 0;\n        break;\n      }\n      per_liter_adder = 0;\n      if (rotary) {\n        if (cylinders == \"3-rtr\")\n          displacement_in_liters += (0.9 * 3);\n        else\n          displacement_in_liters += (0.9 * 2);\n      }\n      if (engine) {\n        per_liter_adder += 25;\n      }\n      if (fi) {\n        displacement_in_liters += 1.4;\n      }\n      if (mydrive == \"RWD\")\n        min_weight = 1600 + ((200 + per_liter_adder) * displacement_in_liters);\n      else if (mydrive == \"FWD\")\n        min_weight = 1350 + ((125 + per_liter_adder) * displacement_in_liters);\n      else if (mydrive == \"AWD\")\n        min_weight = 1600 + ((300 + per_liter_adder) * displacement_in_liters);\n      if (skinnytire) {\n        min_weight -= 200;\n      }\n      if (min_weight > 2900) {\n        min_weight = 2900;\n      }\n      break;\n      // SMF\n    case \"SMF\":\n      if ((mydrive == \"RWD\") ||\n        (mydrive == \"AWD\")) {\n        min_weight = 0;\n        break;\n      }\n      if (rotary) {\n        if (cylinders == \"3-rtr\")\n          displacement_in_liters += (0.9 * 3);\n        else\n          displacement_in_liters += (0.9 * 2);\n      }\n      if (rule_year > 2012) {\n        if (fi) {\n          displacement_in_liters += 1.0;\n        }\n        if (twoseater)\n          min_weight = 1810 + (125 * displacement_in_liters); // 2-seater\n        else\n          min_weight = 1750 + (125 * displacement_in_liters); // 4-seater\n      } else {\n        if (fi) {\n          displacement_in_liters += 1.4;\n        }\n        if (twoseater)\n          min_weight = 1610 + (125 * displacement_in_liters); // 2-seater\n        else\n          min_weight = 1550 + (125 * displacement_in_liters); // 4-seater\n      }\n      if (min_weight > 3100) {\n        min_weight = 3100;\n      }\n      break;\n    default:\n      min_weight = 0;\n      break;\n  }\n  window.scrollTo(0, 0);\n  if (displacement_raw == \"\")\n    alert(\"Please enter a displacement!\");\n  else if (min_weight != 0) {\n    document.getElementById(\"myMinWeight\").value = Math.round(min_weight) + \" lbs \";\n  } else {\n    document.getElementById(\"myMinWeight\").value = \"Invalid config! \";\n  }\n}\n"]}